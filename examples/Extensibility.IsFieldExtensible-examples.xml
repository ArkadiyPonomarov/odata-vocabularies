<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="4.0" xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx">
  <edmx:Reference Uri="https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml">
    <edmx:Include Namespace="Org.OData.Core.V1" Alias="Core" />
  </edmx:Reference>

  <edmx:Reference Uri="https://sap.github.io/odata-vocabularies/vocabularies/Extensibility.xml">
    <edmx:Include Namespace="com.sap.vocabularies.Extensibility.v1" Alias="Extensibility" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema Namespace="Extensibility.examples" xmlns="http://docs.oasis-open.org/odata/ns/edm" Alias="this">

      <EntityContainer Name="default">
        <EntitySet Name="Foo" EntityType="this.Foo" />
      </EntityContainer>

      <EntityType Name="Foo">
        <Key>
          <PropertyRef Name="id" />
        </Key>
        <Property Name="id" Type="Edm.String" Nullable="false" />
        <Property Name="zz_bar" Type="Edm.String" />
      </EntityType>

      <Annotations Target="this.default">

        <!-- NEEDED DIRECTLY -->
        <!-- Preferred Option (1) with discovery url only -->
        <!-- alternatively on every extensible entity ?!-->
        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
            <!-- Feature Discovery would decouple feature development between front-end and backend (
              returns { flavor : "CAP", path: "/add-cap-extension })
              future:
              returns { feat1 : true, feat2: true, path: "/add-cap-extension })"
            -->
            <PropertyValue Property="DiscoveryUrl" String="/get-cap-extension-capabilities" />
          </Record>
        </Annotation>

        <!-- Alternative Option variantions with flavor 
        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
            <PropertyValue Property="Flavor" String="CSN" /> 
            <PropertyValue Property="Path" String="/add-cap-extension" />
          </Record>
        </Annotation>
        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
            <PropertyValue Property="Flavor" String="CSN" />
            <PropertyValue Property="Path" String="/add-cap-extension-openAPI-spec" />
          </Record>
        </Annotation>
        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
          -->
        <!-- FUTURE -->
        <!-- 
            <PropertyValue Property="Flavor" String="ABAP" />
          -->
        <!-- probably a different protocol & feature set needed here -->
        <!-- 
            <PropertyValue Property="Path" String="/add-abap-Extension" />
          -->
        <!-- FUTURE: addition button in the dialog -->
        <!-- 
            <PropertyValue Property="DetailNavigationTarget" String="CustomField-develop" />
          </Record>
        </Annotation>
        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
            -->
        <!-- FUTURE: addition button in the dialog -->
        <!-- 
            <PropertyValue Property="DetailNavigationTarget" String="FXH-create" />
            <PropertyValue Property="DetailNavigationTarget" String="CustomField-develop"  />
          </Record>
        </Annotation>

        <Annotation Term="Extensibility.FieldExtensibilityMechanism">
          <Record>
            -->
        <!-- FUTURE: addition button in the dialog -->
        <!-- 
            <PropertyValue Property="DetailNavigationUrl" String="/extension-hub"  />
          </Record>
        </Annotation>
      -->
      </Annotations>

      <Annotations Target="this.Foo">
        <!-- NEEDED DIRECTLY -->
        <!-- everything the server can do is allowed, opt-in to extensibility for the outside view -->
        <!-- TODO: What is the naming rule? IsExtensible or Extensible -->
        <Annotation Term="Extensibility.Extensible" Bool="true"></Annotation>
        <!-- Also on container/service level?! -->
        <Annotation Term="Extensibility.Enabled">
          <!-- TODO: Do we have opt-out or opt in for the features not listed below? -->
          <Record>
            <!-- NEEDED DIRECTLY -->
            <!-- Adding attributes and annotations for this attribute -->
            <PropertyValue Property="Fields" Bool="true" />
            <!-- FUTURE -->
            <!-- Adding attributes that introduce new compositions (e.g. to a new/existing table/sub-entity) -->
            <PropertyValue Property="Composition" Bool="true" />
            <!-- FUTURE -->
            <!-- Adding attributes that introduce new associations (e.g. to a new/existing table/entity) -->
            <PropertyValue Property="FieldsFromNewDataSource" Bool="true" />
            <!-- Adding and overwriting annotations of the entity and any attribute, annotations define themselves if they can be overwritten, e.g. label=>yes, mandatory=>no  -->
            <PropertyValue Property="Annotations" Bool="true" />
          </Record>
        </Annotation>


        <!-- Entity Name = Extension Point Name (if not provided via @Extensibility.ExtensionPoints -->
        <Annotation Term="Extensibility.ExtensionPoints">
          <Collection>
            <!-- Establishing references between the entities extensibility features and the extension points to be exposed, allowing indirections between entity name and extension point -->
            <String>sap.someApp:dataModelExtensionPoint:CUSTOMER_PROJECT</String>
            <String>sap.aligned:dataModelExtensionPoint:MAIN_PROJECT</String>
          </Collection>
          <!-- ABAP has 2 types of structural extension points, CDS Extension Points  + Business Contexts-->
        </Annotation>


        <!-- -->
      </Annotations>

      <Annotations Target="this.Foo/id">
        <!-- FUTURE -->
        <!-- telling others that the property that is not yet exposed along E2E process chains be exposed via extensibility mechanisms  -->
        <!-- Note: this would be an engine-internal annotation and not visible in the API if the field is not yet exposed in the API -->
        <Annotation Term="Extensibility.Exposable" Bool="true" />
      </Annotations>

      <Annotations Target="this.Foo/zz_bar">
        <!-- FUTURE -->
        <!-- telling others that the property was create via extensibility mechanisms  -->
        <Annotation Term="Extensibility.ExtensionField" Bool="true" />
      </Annotations>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>
